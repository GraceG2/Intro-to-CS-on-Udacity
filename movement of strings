# Write a procedure, rotate which takes as its input a string of lower case
# letters, a-z, and spaces, and an integer n, and returns the string constructed
# by shifting each of the letters n steps, and leaving the spaces unchanged.
# Note that 'a' follows 'z'. You can use an additional procedure if you
# choose to as long as rotate returns the correct string.
# Note that n can be positive, negative or zero.

# Write a procedure, shift_n_letters which takes as its input a lowercase
# letter, a-z, and an integer n, and returns the letter n steps in the
# alphabet after it. Note that 'a' follows 'z', and that n can be positive,
#negative or zero.

def shift_n_letters(letter, n):
    if ord(letter) + n > ord('z'):
        return chr(ord('a') + n-(ord('z')-ord(letter)) - 1)
    if ord(letter) + n < ord('a'):    
        return chr(ord('z') + n + (ord(letter)-ord('a')) + 1)
    else:
        return chr(ord(letter) + n)


def rotate(word, n):
    word_n = ''
    for c in word:
        if c != ' ':
            word_n += shift_n_letters(c, n)
        else:
            word_n += ' '
    return word_n

print rotate ('sarah', 13)
#>>> 'fnenu'
print rotate('fnenu',13)
#>>> 'sarah'
print rotate('dave',5)
#>>>'ifaj'
print rotate('ifaj',-5)
#>>>'dave'
print rotate(("zw pfli tfuv nfibj tfiivtkcp pfl jyflcu "
                "sv rscv kf ivru kyzj"),-17)
#>>> ???
